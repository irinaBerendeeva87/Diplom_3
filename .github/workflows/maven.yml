# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on: workflow_dispatch

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
        
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
    - name: Install Chrome
      run: |
        brew tap homebrew/cask
        brew install --cask google-chrome
        brew install --cask chromedriver
        which chromedriver
    - name: Install Allure
      run: |
        brew install allure
        allure --version
      # Устанавливаем Allure для создания отчетов

    - name: Build and Test
      run: |
        mvn clean test # Замените эту команду на свою команду для сборки и запуска тестов

    - name: Generate Allure Report
      run: |
        allure generate target/allure-results --clean -o target/allure-report

    - name: Publish Allure Report
      uses: actions/upload-artifact@v2
      with:
        name: allure-report
        path: target/allure-report 
